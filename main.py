aW1wb3J0IG9zCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudgpmcm9tIHByb3Bvc2FsX3Byb2Nlc3NvciBpbXBvcnQgUHJvcG9zYWxQcm9jZXNzb3IKZnJvbSBnb29nbGUuY2xvdWQgaW1wb3J0IGFpcGxhdGZvcm0KCiMgTG9hZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMKbG9hZF9kb3RlbnYoKQoKIyBJbml0aWFsaXplIFZlcnRleEFJCmlmIG9zLmdldGVudigiVVNFX1ZFUlRFWF9BSSIsICJmYWxzZSIpLmxvd2VyKCkgPT0gInRydWUiOgogICAgYWlwbGF0Zm9ybS5pbml0KAogICAgICAgIHByb2plY3Q9b3MuZ2V0ZW52KCJHT09HTEVfQ0xPVURfUFJPSkVDVCIpLAogICAgICAgIGxvY2F0aW9uPW9zLmdldGVudigiR09PR0xFX0NMT1VEX0xPQ0FUSU9OIiwgInVzLWNlbnRyYWwxIikKICAgICkKCiMgSW5pdGlhbGl6ZSB0aGUgcHJvY2Vzc29yCnByb2Nlc3NvciA9IFByb3Bvc2FsUHJvY2Vzc29yKAogICAgc3VwYWJhc2VfdXJsPW9zLmdldGVudigiU1VQQUJBU0VfVVJMIiksCiAgICBzdXBhYmFzZV9rZXk9b3MuZ2V0ZW52KCJTVVBBQ0FTRV9TRVJWSUNFX0tFWSIpLAogICAgb3BlbmFpX2FwaV9rZXk9b3MuZ2V0ZW52KCJPUEVOQULFX0FQSV9LRVkiKSwKICAgIHVzZV92ZXJ0ZXhfYWk9b3MuZ2V0ZW52KCJVU0VfVkVSVEVYX0FJIiwgImZhbHNlIikubG93ZXIoKSA9PSAidHJ1ZSIsCiAgICB2ZXJ0ZXhfYWlfbW9kZWw9InRleHQtZW1iZWRkaW5nLTAwNCIsCiAgICBlbWFpbF9jb25maWc9ewogICAgICAgICJmcm9tIjogb3MuZ2V0ZW52KCJFTUFJTF9GUk9NIiksCiAgICAgICAgInRvIjogb3MuZ2V0ZW52KCJFTUFJTF9UTyIpLAogICAgICAgICJzbXRwX3NlcnZlciI6IG9zLmdldGVudigiU01UUF9TRVJWRVIiLCAic210cC5nbWFpbC5jb20iKSwKICAgICAgICAidXNlcm5hbWUiOiBvcy5nZXRlbnYoIkVNQUlMX1VTRVJOQU1FIiksCiAgICAgICAgInBhc3N3b3JkIjogb3MuZ2V0ZW52KCJFTUFJTF9QQVNTV09SRCIpCiAgICB9Cikk=